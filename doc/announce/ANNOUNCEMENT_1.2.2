============== SOFTWARE RELEASE ANNOUNCEMENT ===================


                Core Library Version 1.2.2
                        March 7, 2000
                ************************

0) This is a minor modification of version 1.2.1.

	You can either directly download the whole library

        	core_v1.2.2.tar.gz

	or if you already have core_v1.2.1, then you only
	need to download the patch file

        	patch_v1.2.2.tar

1) Fixed a bug in square-root routine (i.e., BigFloatRep::sqrt()).

	The basic iteration for sqrt(a), based on Newton, is

		x'  =  (x + (a/x))/2

	where x is current approximation and x' is the new
	appromation.  

	The problem is that when the division by 2 is inexact,
	we need to shift left (and adjust the exponent) before
	division).

2) Fixed a bug in BigFloatRep::operator <<.

	The bug is that the position of the decimal point
	in the output (stored in the programming variable E)
	is sometimes computed wrongly.

	This is because we compute machine precision to compute E,
	and this could be in error.   We now adjust the estimated E
	by using exact comparison.  A new private function called
	adjustE() is added to achieve this.

3) Fixed a bug in BigFloatRep::operator <<.

	We want the printout of any bigFloat number to show
	only the significant digits.  That is, all the digits
	except for the last one must be correct.  The last one
	is incorrect only up to +/- 1.

	E.g., 1/3
        printed to 4 digits might print as
                0.33338987
        in the past (it is technically correct, of course)
        but the extra digits are misleading.  Now, it will print as
                0.3333
        (assuming the computed value has this much precision).

4) The output routine are totally rewritten:
   By default, scientific notation will be used when:
     - if scientific notation flag is on if the error contribute
       to the integral part.
     - Does not have enough places for the specified output precision to
       hold the positional representation including decimal point.
     - The distance between the first significant digit and decimal
       point is too large for the width limit.

   The output precision can be set by using stream manipulators.  E.g.

		double x = 1/3;
		cout << setprecision(4) << x << endl;

	This will print 0.33 (three digits plus the decimal dot).  

   In conventional positional representation, the output precision bounds
   on the number of digits printed out (including decimal dot when applicable).
   In Scientific notation, it bounds the number of significant digits 
   printed out (not including the exponent part). 

5) The only files that have been changed for version 1.2.2 are
	src/BigFloat.cc  and inc/BigFloat.h.  Please
	download version 1.2.1 and replace these 2 files.



============== SOFTWARE RELEASE ANNOUNCEMENT ===================


